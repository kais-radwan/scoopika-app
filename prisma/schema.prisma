generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:../local.db"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  plan          String    @default("none")

  image    String?
  accounts Account[]
  sessions Session[]
}

model Agent {
  id      String @id
  userId  String
  payload String
}

model Box {
  id      String @id
  name    String
  userId  String
  payload String
}

model Token {
  id     String @id
  userId String
  name   String
  value  String
}

model Datastore {
  id            String @id @default(cuid())
  userId        String
  name          String
  db_id         String
  deployment_id String
  url           String
}

model Historystore {
  id     String @id @default(cuid())
  userId String
  name   String
}

model Apikeys {
  id     String @id @default(cuid())
  userId String
  name   String
  value  String
}

model Knowledge {
  id      String @id @default(cuid())
  userId  String
  agentId String
  fileId  String
  name    String
  vectors String
}

model KnowledgeStore {
  id     String @id @default(cuid())
  userId String
  name   String
}

model KnowledgeSource {
  id      String @id @default(cuid())
  storeId String
  userId  String
  name    String
  fileId  String
  vectors String
  type    String
}

model Waitlistv1 {
  id    String @id @default(cuid())
  email String @unique
}

model Widget {
  id               String @id @default(cuid())
  name             String
  userId           String
  agentId          String
  store            String
  audio            String
  vision           String
  pdf              String
  type             String
  styleType        String
  theme            String
  welcomeMsg       String
  radius           String
  primaryColor     String
  bgColor          String
  primaryTextColor String
  textColor        String
  waveColor        String
  cssContainer     String
  cssInput         String
  allowedSources   String
}